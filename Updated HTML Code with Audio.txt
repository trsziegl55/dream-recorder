<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dream Recorder</title>
    <script src="https://www.gstatic.com/firebasejs/9.0.2/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.0.2/firebase-storage.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.0.2/firebase-firestore.js"></script>
</head>
<body>
    <h1>Record Your Dream</h1>
    <button id="start-recording">Start Recording</button>
    <button id="stop-recording" disabled>Stop Recording</button>
    <div id="transcription">Your transcription will appear here...</div>
    <div id="interpretation">Your dream interpretation will appear here...</div>
    
    <script>
        // Firebase configuration
        const firebaseConfig = {
            apiKey: "YOUR_API_KEY",
            authDomain: "YOUR_PROJECT_ID.firebaseapp.com",
            projectId: "YOUR_PROJECT_ID",
            storageBucket: "YOUR_PROJECT_ID.appspot.com",
            messagingSenderId: "YOUR_MESSAGING_SENDER_ID",
            appId: "YOUR_APP_ID",
            measurementId: "YOUR_MEASUREMENT_ID"
        };
        
        const app = firebase.initializeApp(firebaseConfig);
        const storage = firebase.storage();
        
        // Set up Speech Recognition
        const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
        recognition.lang = 'en-US';
        recognition.continuous = true;
        recognition.interimResults = true;

        // Elements
        const startBtn = document.getElementById("start-recording");
        const stopBtn = document.getElementById("stop-recording");
        const transcriptionDiv = document.getElementById("transcription");

        let audioChunks = [];

        // Start Recording
        startBtn.onclick = function() {
            recognition.start();
            startBtn.disabled = true;
            stopBtn.disabled = false;
        };

        // Stop Recording
        stopBtn.onclick = function() {
            recognition.stop();
            startBtn.disabled = false;
            stopBtn.disabled = true;
        };

        // Handle Speech Recognition Result
        recognition.onresult = function(event) {
            const transcript = event.results[event.results.length - 1][0].transcript;
            transcriptionDiv.innerText = transcript;
        };

        // Handle Error
        recognition.onerror = function(event) {
            transcriptionDiv.innerText = "Error: " + event.error;
        };

        // Example: Upload Transcription to Firebase Storage (optional)
        function uploadTranscription(text) {
            const storageRef = storage.ref().child('dream_transcriptions/' + Date.now() + '.txt');
            storageRef.putString(text).then(function(snapshot) {
                console.log("Transcription uploaded successfully!");
            });
        }

        // Optionally, upload transcription to Firebase Firestore for storage
        recognition.onend = function() {
            const transcriptionText = transcriptionDiv.innerText;
            if (transcriptionText) {
                uploadTranscription(transcriptionText);
            }
        };

        // AI Integration (Optional, e.g., OpenAI)
        async function getAIInterpretation(dreamText) {
            const apiKey = "YOUR_OPENAI_API_KEY";
            const response = await fetch('https://api.openai.com/v1/completions', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${apiKey}`
                },
                body: JSON.stringify({
                    model: 'text-davinci-003',
                    prompt: `Interpret the following dream: ${dreamText}`,
                    max_tokens: 100
                })
            });

            const data = await response.json();
            const interpretation = data.choices[0].text.trim();
            document.getElementById('interpretation').innerText = interpretation;
        }

        // Example Usage: Call AI after transcription is complete
        recognition.onend = function() {
            const transcriptionText = transcriptionDiv.innerText;
            if (transcriptionText) {
                uploadTranscription(transcriptionText);
                getAIInterpretation(transcriptionText);  // Get the AI Interpretation
            }
        };
    </script>
</body>
</html>
